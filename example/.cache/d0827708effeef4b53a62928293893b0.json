{"dependencies":[],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeOf = getTypeOf;\nexports.isArray = isArray;\nexports._each = _each;\nexports.downloadFile = downloadFile;\n\n/**\n*获取数据的数据类型，\n* return 小写的类型 array , boolean, object, number, string, null, undefined, function 等\n*/\nfunction getTypeOf(d) {\n  return Object.prototype.toString.call(d).slice(8, -1).toLowerCase();\n}\n/**\n * 是否为数据是否array\n * @param {} d \n */\nfunction isArray(d) {\n  if (Array.isArray) {\n    return Array.isArray(d);\n  } else {\n    return getTypeOf(d) === 'array';\n  }\n}\n\n// 可中断的遍历器\nfunction _each(items, fn) {\n  var len = items.length;\n  if (!isArray(items) && !len) return;\n  for (var i = 0; i < len; i++) {\n    if (fn(items[i])) return;\n  }\n}\n\nfunction downloadFile(url, name) {\n  // 修复firefox无法点击下载\n  HTMLElement.prototype.click = function () {\n    var evt = this.ownerDocument.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, this.ownerDocument.defaultView, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n    this.dispatchEvent(evt);\n  };\n  var a = document.createElement('a');\n  a.href = url;\n  a.download = name;\n  a.click();\n}"},"hash":"7969eb98c6affdd5aa61d2ade0e2be06"}